{"mappings":"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","sources":["src/js/fetch-cocktails.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-04a41f6bd86c6c67.js","src/js/favorite-storage.js","src/js/modal-ingredients.js","src/js/get-ingredients-markup.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-c76e54350e07bcb6.js","src/js/fav-ingredients.js"],"sourcesContent":["export function fetchRandomCocktails(amount) {\n  const allPromises = [];\n\n  for (let count = 0; count < amount; count++) {\n    allPromises.push(\n      fetch('https://thecocktaildb.com/api/json/v1/1/random.php').then(\n        response => response.json()\n      )\n    );\n  }\n\n  return Promise.all(allPromises).then(data => {\n    return data.map(item => item.drinks[0]);\n  });\n}\n\nexport function fetchCocktailsByName(name) {\n  return fetch(`https://thecocktaildb.com/api/json/v1/1/search.php?s=${name}`)\n    .then(response => response.json())\n    .then(({ drinks }) => {\n      if (!drinks) throw \"Sorry, we didn't find<br>any cocktail for you\";\n\n      return drinks;\n    });\n}\n\nexport function fetchCocktailById(id) {\n  return fetch(`https://thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then(response => response.json())\n    .then(({ drinks }) => drinks[0]);\n}\n\nexport function fetchIngredientByName(name) {\n  return fetch(`https://thecocktaildb.com/api/json/v1/1/search.php?i=${name}`)\n    .then(response => response.json())\n    .then(({ ingredients }) => ingredients[0]);\n}\nexport function fetchCocktailsByLetter(firstLetter) {\n  return fetch(\n    `https://thecocktaildb.com/api/json/v1/1/search.php?f=${firstLetter}`\n  )\n    .then(response => response.json())\n    .then(({ drinks }) => {\n      if (!drinks) throw \"Sorry, we didn't find<br>any cocktail for you\";\n\n      return drinks;\n    });\n}\n","module.exports = \"0beea7c65c9eb400\";","export const FavoriteStorage = {\n    cocktailsKey: 'fav-cocktails',\n    ingredientsKey: 'fav-ingredients',\n\n    getCocktails() {\n        return JSON.parse(localStorage.getItem(this.cocktailsKey)) || [];\n    },\n    getIngredients() {\n        return JSON.parse(localStorage.getItem(this.ingredientsKey)) || [];\n    },\n    isCocktailInFavorite(id) {\n        return this.getCocktails().includes(id);\n    },\n    isIngredientInFavorite(name) {\n        return this.getIngredients().includes(name);\n    },\n    addCocktail(id) {\n        const tmp = this.getCocktails();\n        tmp.push(id);\n        localStorage.setItem(this.cocktailsKey, JSON.stringify(tmp));\n    },\n    removeCocktail(id) {\n        const tmp = this.getCocktails();\n        const idIndex = tmp.indexOf(id);\n\n        tmp.splice(idIndex, 1);\n        localStorage.setItem(this.cocktailsKey, JSON.stringify(tmp));\n    },\n    addIngredient(name) {\n        const tmp = this.getIngredients();\n        tmp.push(name);\n        localStorage.setItem(this.ingredientsKey, JSON.stringify(tmp));\n    },\n    removeIngredient(name) {\n        const tmp = this.getIngredients();\n        const idIndex = tmp.indexOf(name);\n\n        tmp.splice(idIndex, 1);\n        localStorage.setItem(this.ingredientsKey, JSON.stringify(tmp));\n    }\n}","import { fetchIngredientByName } from './fetch-cocktails';\nimport ingredientClose from 'bundle-text:../img/modal-close.svg';\nimport { FavoriteStorage } from './favorite-storage';\n\nconst ingredientModal = document.querySelector('#modal-ingredients-details');\nexport function showIngredientModal(event) {\n  if (event.target.dataset.name !== 'ingredient') {\n    return;\n  }\n  fetchIngredientByName(event.target.dataset.ingredient).then(data => {\n    ingredientModal.innerHTML = getIngredientModalMarkup(data);\n    const closeIngredientBtn = ingredientModal.querySelector(\n      '.ingredients__button-close'\n    );\n    const addRemoveBtn = ingredientModal.querySelector('.ingredients__button');\n    addRemoveBtn.addEventListener('click', handleAddRemoveIngredient);\n    closeIngredientBtn.addEventListener('click', closeIngredientModal);\n    ingredientModal.classList.toggle('show-modal');\n  });\n}\n\nfunction getIngredientModalMarkup(details) {\n  const isInFavorite = FavoriteStorage.isIngredientInFavorite(details.strIngredient);\n  const btnText = isInFavorite ? 'Remove from favorite' : 'Add to favorite';\n\n  return `\n    <div class=\"ingredients__btn\">\n    <button type=\"button\" class=\"ingredients__button-close\">\n    ${ingredientClose}\n    </button>\n  </div>\n  <h2 class=\"ingredients__title\">${details.strIngredient}</h2>\n  <h3 class=\"ingredients__topic\">${details.strType || '-'}</h3>\n  <div class=\"ingredients__line-container\">\n    <div class=\"ingredients__line\"></div>\n  </div>\n  <p class=\"ingredients__text\">\n    ${details.strDescription || 'Sorry, there is no description for this ingredient'}\n  </p>\n  <ul class=\"ingredients__list\">\n  <li class= \"ingredients__item\"> <span class=\"ingredients__black\">✶ </span> Type: ${\n    details.strType || '-'\n  }</li>\n  <li class= \"ingredients__item\"> <span class=\"ingredients__black\">✶ </span> Alcoholic: ${\n    details.strAlcohol || '-'\n  }</li>\n  <li class= \"ingredients__item\"> <span class=\"ingredients__black\">✶ </span> Alcohol by volume: ${\n    details.strABV || '-'\n  }</li>\n  </ul>\n  <button type=\"button\" class=\"ingredients__button\" data-name=\"add-remove\" data-id=\"${details.strIngredient}\">${btnText}</button>`;\n}\n\nfunction closeIngredientModal() {\n  ingredientModal.innerHTML = '';\n  ingredientModal.classList.toggle('show-modal');\n}\nexport function handleAddRemoveIngredient(event) {\n  const name = event.target.dataset.id;\n  const buttonFromCard = document.querySelector(`.btn__add[data-id=\"${name}\"]`);\n\n  buttonFromCard.classList.toggle('icon-active');\n\n  if (FavoriteStorage.isIngredientInFavorite(name)) {\n    FavoriteStorage.removeIngredient(name);\n    event.target.textContent = \"Add to favorite\";\n    buttonFromCard.querySelector('.btn-text').innerHTML = 'Add to';\n  } else {\n    FavoriteStorage.addIngredient(name);\n    event.target.textContent = \"Remove from favorite\";\n    buttonFromCard.querySelector('.btn-text').innerHTML = 'Remove';\n  }\n}","import { showIngredientModal } from './modal-ingredients';\nimport heartIcon from 'bundle-text:../img/heart-icon.svg';\nimport { FavoriteStorage } from \"./favorite-storage\";\nexport function getDrinksMarkupIngredients(array) {\n    const markup = array.map(({ strIngredient, strType }) => {\n        return getCardMarkupIngredients(strIngredient, strType);\n    });\n    return markup;\n}\nfunction getCardMarkupIngredients(name, strType) {\n    const li = document.createElement('li');\n    li.className = 'cocktails__item cocktails__item-ingredients';\n    const isInFavorite = FavoriteStorage.isIngredientInFavorite(name);\n    const addRemoveClassName = isInFavorite ? 'btn__add icon-active' : 'btn__add';\n    const btnText = isInFavorite ? 'Remove' : 'Add to';\n    li.innerHTML = `\n            <div class=\"cocktails__descr cocktails__container\">\n            <h3 title=\"${name}\" class=\"cocktails__name cocktails__name--ingredients\">${name}</h3>\n            <p title=\"${strType}\" class=\"cocktails__category\">${strType || 'Common'}</p>\n            <div class=\"cocktails__btns\">\n                <button class=\"btn__learn\" type=\"button\" data-name=\"ingredient\" data-ingredient=\"${name}\" data-id=\"${name}\" >Learn more</button>\n                <button class=\"${addRemoveClassName}\" type=\"button\" data-name=\"add-remove\" data-id=\"${name}\"><span data-name=\"add-remove\" class=\"btn-text\">${btnText}</span> <span data-name=\"add-remove\" class=\"heart-icon\">${heartIcon}</span></button>\n            </div>\n        </div>\n        `;\n    li.addEventListener('click', handleIngredientCardClick);\n    return li;\n}\nexport function handleIngredientCardClick(event) {\n    const buttonName = event.target.dataset.name;\n    if (buttonName === 'ingredient') {\n        showIngredientModal(event);\n    }\n    if (buttonName === 'add-remove' || buttonName === 'heart-icon') {\n        const addRemoveBtn = event.currentTarget.querySelector('.btn__add');\n        const btnText = addRemoveBtn.querySelector('.btn-text');\n        const name = addRemoveBtn.dataset.id;\n        addRemoveBtn.classList.toggle('icon-active');\n        if (FavoriteStorage.isIngredientInFavorite(name)) {\n            FavoriteStorage.removeIngredient(name);\n            btnText.textContent = \"Add to\";\n        } else {\n            FavoriteStorage.addIngredient(name);\n            btnText.textContent = \"Remove\";\n        }\n    }\n}","module.exports = \"c7faef194cdf72d6\";","import { getDrinksMarkupIngredients } from './get-ingredients-markup';\nimport { fetchIngredientByName } from './fetch-cocktails';\nimport { FavoriteStorage } from './favorite-storage';\n\nconst favContent = document.querySelector('.content-results');\nconst noFoundIngredients = `<p class=\"favorite__none\">\nYou haven't added any <br>favorite ingredients yet</p>`;\n\ngetIngredientsData();\n\nfunction makePromises() {\n  const favIngredients = FavoriteStorage.getIngredients();\n  const promises = favIngredients.reduce((acc, name) => {\n    acc.push(fetchIngredientByName(name));\n    return acc;\n  }, []);\n  return promises;\n}\n\nasync function getIngredientsData() {\n  const promises = makePromises();\n  const data = await Promise.all(promises).catch(error => console.log(error));\n\n  console.log(data);\n\n  if (data.length === 0) {\n    favContent.innerHTML = noFoundIngredients;\n      return;\n  }\n\n  favContent.innerHTML = '';\n  favContent.append(...getDrinksMarkupIngredients(data));\n}\n"],"names":["$932db8701b90d291$export$60fd80745d01af43","name","fetch","then","response","json","ingredients","$64e6864b2571a755$exports","$15745b2906da656d$export$2ecec965e4a9a63a","cocktailsKey","ingredientsKey","getCocktails","JSON","parse","localStorage","getItem","this","getIngredients","isCocktailInFavorite","id","includes","isIngredientInFavorite","addCocktail","tmp","push","setItem","stringify","removeCocktail","idIndex","indexOf","splice","addIngredient","removeIngredient","$7d037d87c507d84a$var$ingredientModal","document","querySelector","$7d037d87c507d84a$export$63a3470e87583da6","event","target","dataset","ingredient","data","innerHTML","details","btnText","strIngredient","$parcel$interopDefault","strType","strDescription","strAlcohol","strABV","$7d037d87c507d84a$var$getIngredientModalMarkup","closeIngredientBtn","addEventListener","$7d037d87c507d84a$export$d1cb1e06ee3a3100","$7d037d87c507d84a$var$closeIngredientModal","classList","toggle","buttonFromCard","textContent","$f81fbb49185621f4$export$bc608ed275c0c153","array","map","li","createElement","className","isInFavorite","addRemoveClassName","$72778db45f44829a$exports","$f81fbb49185621f4$export$63cbea3aec574735","$f81fbb49185621f4$var$getCardMarkupIngredients","buttonName","addRemoveBtn","currentTarget","$4965aecbeeb41b49$var$favContent","async","promises","reduce","acc","$4965aecbeeb41b49$var$makePromises","Promise","all","catch","error","console","log","length","append","$4965aecbeeb41b49$var$getIngredientsData"],"version":3,"file":"fav-ingredients.99bbe7c3.js.map"}